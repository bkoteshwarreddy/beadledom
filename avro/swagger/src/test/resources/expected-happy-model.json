[
  {
    "id": "HappyModel",
    "description": "This model can be used to test most test cases.\nThis comment can be used to test multiline descriptions\nbecause it's a multiline comment.",
    "required": [
      "directly_nested_model",
      "enum_field",
      "model_array_field",
      "primitive_array_field",
      "string_field",
      "bytes_field",
      "int_field",
      "long_field",
      "float_field",
      "double_field",
      "boolean_field"
    ],
    "properties": {
      "directly_nested_model": {
        "$ref": "NestedHappyModel",
        "description": "Make sure the field comment, not the record comment, is used for the field.\nAnd make sure multiline field comments work right, too."
      },
      "optional_nested_model": {
        "$ref": "NestedHappyModel",
        "description": "Comments work on optional fields."
      },
      "enum_field": {
        "type": "string",
        "description": "Comments work on enum fields.",
        "enum": [
          "EBULLIENT",
          "BUOYANT",
          "PEPPY",
          "FULL_OF_BEANS"
        ]
      },
      "optional_enum_field": {
        "type": "string",
        "enum": [
          "EBULLIENT",
          "BUOYANT",
          "PEPPY",
          "FULL_OF_BEANS"
        ]
      },
      "model_array_field": {
        "type": "array",
        "items": {
          "$ref": "NestedHappyModel"
        }
      },
      "optional_model_array_field": {
        "type": "array",
        "items": {
          "$ref": "NestedHappyModel"
        }
      },
      "primitive_array_field": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "optional_primitive_array_field": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "string_field": {
        "type": "string",
        "description": "Comments work on primitive fields."
      },
      "optional_string_field": {
        "type": "string"
      },
      "bytes_field": {
        "type": "string",
        "format": "byte"
      },
      "optional_bytes_field": {
        "type": "string",
        "format": "byte"
      },
      "int_field": {
        "type": "integer",
        "format": "int32"
      },
      "optional_int_field": {
        "type": "integer",
        "format": "int32"
      },
      "long_field": {
        "type": "integer",
        "format": "int64"
      },
      "optional_long_field": {
        "type": "integer",
        "format": "int64"
      },
      "float_field": {
        "type": "number",
        "format": "float"
      },
      "optional_float_field": {
        "type": "number",
        "format": "float"
      },
      "double_field": {
        "type": "number",
        "format": "double"
      },
      "optional_double_field": {
        "type": "number",
        "format": "double"
      },
      "boolean_field": {
        "type": "boolean"
      },
      "optional_boolean_field": {
        "type": "boolean"
      }
    }
  },
  {
    "id": "NestedHappyModel",
    "description": "A model to test nested records.",
    "required": ["content"],
    "properties": {
      "content": {
        "type": "string"
      }
    }
  }
]
